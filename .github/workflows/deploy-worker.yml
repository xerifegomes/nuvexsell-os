name: Deploy Worker

on:
  push:
    branches: [ main ]
    paths:
      - 'apps/worker/**'
      - 'packages/core/**'
      - '.github/workflows/deploy-worker.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

env:
  PNPM_VERSION: 8.15.0

jobs:
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging')
    environment:
      name: staging
      url: https://nuvexsell-worker-staging.your-domain.workers.dev
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build core package
        run: pnpm --filter @nuvexsell/core build

      - name: Deploy to Cloudflare Workers (Staging)
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --env staging
          workingDirectory: apps/worker
          secrets: |
            JWT_SECRET
            STRIPE_SECRET
            OLLAMA_HOST
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET_STAGING }}
          STRIPE_SECRET: ${{ secrets.STRIPE_SECRET_STAGING }}
          OLLAMA_HOST: ${{ secrets.OLLAMA_HOST_STAGING }}

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production'
    environment:
      name: production
      url: https://api.nuvexsell.com
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build core package
        run: pnpm --filter @nuvexsell/core build

      - name: Deploy to Cloudflare Workers (Production)
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --env production
          workingDirectory: apps/worker
          secrets: |
            JWT_SECRET
            STRIPE_SECRET
            OLLAMA_HOST
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET_PRODUCTION }}
          STRIPE_SECRET: ${{ secrets.STRIPE_SECRET_PRODUCTION }}
          OLLAMA_HOST: ${{ secrets.OLLAMA_HOST_PRODUCTION }}